/*
4、穿越沙漠
【问题描述】
一辆卡车欲穿过 1000 千米的沙漠，卡车耗油为 1 升 / 千米，卡车总载油能力为
500 升。显然，卡车装一次油是过不了沙漠的。因此，司机必须设法在沿途建立几
个贮油点，使卡车能顺利穿越沙漠。试问：司机如何建立这些贮油点？每一贮油
点应存多少油，才能使卡车以消耗最少
汽油的代价通过沙漠？结果保留小数点后两位。
编程计算及打印建立的贮油点序号，各贮油点距沙漠边沿出发的距离以及存油量，
格式如下：
No. Distance(km) Oil (litre)
1 ×××.×× ×××.××
2 ×××.×× ×××.××
3 ×××.×× ×××.××
*/
#include<bits/stdc++.h>
using namespace std;
const int N = 1e3+10;
double	oil[N],dis[N];
//递推公式oil[1]=500 oil[n]=oil[n-1]+500,dis[1]=500 dis[n]=dis[n-1]+500/(2*(n-2)); 
int main(){
	int cnt=0;
	oil[1]=dis[1]=500;
	for(int i=2;dis[i]<1000;i++){
		dis[i]=dis[i-1]+500/(2*(i-1)-1);
		oil[i]=oil[i-1]+500;
		cout<<dis[i]<<" "<<oil[i]<<endl;
		cnt=i;
	}
	printf("No.\tDistance(km)\tOil(litre)\n");
	for(int i=1;i<=cnt;i++){
		printf("%d\t%.2lf\t%.2lf\n",i,dis[i],oil[i]);	
	}
	
	return 0;
}
/*【问题分析】
因为从起始点出发无法确定第 1 个贮油点的位置及贮油量，所以顺推行不通。下
面换个思路倒推试试看。先从终点出发倒推最后一个贮油点的位置及贮油量，然
后再把最后一个贮油点作为终点，倒推倒数第 2 个贮油点的位置及贮油量，……
设 dis(i)表示第 i 个贮油点至终点(i=0)的距离，oil (i)表示第 i 个贮油点的贮油量。从
终点向起始点倒推，逐一求出每个贮油点的位置及存油量，如图 9.4-2 所示。
从贮油点 i 向贮油点 i+1 倒推的策略是，卡车在点 i 和点 i+1 间往返若干次。
卡车每次返回i+1 处时正好耗尽 500 升汽油，而每次从 i+1 处出发时又必须装满
500 升汽油。两点之间的距离必须满足在耗油最少的条件下使 i 点贮存 i×500 升汽
油的要求(0≤i≤n-1)，根据贪心思想，第一个贮油点 i=1 应距终点 i=0 处 500 千米且
在该处贮藏 500 升汽油，这样才能保证卡车能由 i=1 处到达终点 i=0 处，这就是说，
dis(1)=500，oil(1)=500。而为了在 i=1 处贮藏 500升汽油，卡车至少从 i=2 处开两
趟满载油的车至 i=1 处，所以 i=2 处至少存贮 2×500 升汽油，即 oil(2)
=500×2=1000，另外再加上从 i=1 返回至 i=2 处的一趟空载，合计往返 3 次，往
返路程的耗油量按最省要求只能为500升，即d 1，2 = 500/3，所以dis (2)=dis (1)+d 
1，2 =dis (1)+500/3。
同理，为了在i=2处贮存1000升汽油，卡车至少从i=3处开3趟满载油的车至
i=2处。所以，i=3 处至少存贮 3×500 升汽油，即 oil(3)=500×3=1500，加上
i=2 至 i=3 处的 2 趟返程空车，合计 5 次，路途耗油量也应该是 500 升，即 d 2，
3 =500/5，所以 dis(3)=dis(2)+d 2，3 =dis(2)+500/5。
依次类推，为了在 i=k 处贮藏 k×500 升汽油，卡车至少从 i=k+1 处开 k 趟
满载车至 i=k 处，即oil(k+1)=(k+1)×500=oil (k)+500，加上从 i=k 返回 i=k+1 的
k-1 趟返程空车，合计 2*k-1 次，总耗油量按最省要求为 500 升，即 d k， k+1 = 
500/ (2×k-1)，所以 dis(k+1) = dis(k)+d k，k+1 = dis(k)+500/(2×k-1)。
最后一个贮油点的位置如图 9.4-4 所示。
最后，i=n至起始点的距离为1000-dis (n)，oil (n)=500×n。为了在i=n处取得
n×500升汽油，卡车至少从始点开n+1次满载车至i=n，加上从i=n返回起始点的n
趟返程空车，合计2×n+1次，总耗油量应正好为(1000-dis(n))×(2×n+1)，即起始
点藏油为 oil (n)+(1000-dis(n))×(2×n+1)。
*/
