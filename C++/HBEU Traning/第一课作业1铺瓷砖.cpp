/*
1、铺瓷砖
【问题描述】
用红色的 1×1 和黑色的 2×2 两种规格的瓷砖不重叠地铺满 n×3 的路面，求出
有多少种不同的铺设方案。
【输入格式】
一行一个整数 n，0<n<1000。
【输出格式】
一行一个整数，为铺设方案的数量模12345的结果。
【输入样例】
2
【输出样例】
3
【问题分析】
用 f(n) 表示 n×3 的路面有多少种不同的铺设方案。把路面看成 n 行 3 列，则问
题可以分成两种情况考虑，一种是最后一行用 3 块 1×1 的瓷砖铺设；另一种是
最后两行用 1 块 2×2 和 2 块 1×1 的瓷砖铺设(最后两行就有两种铺法)，第一
种铺法就转换为 f(i-1) 的问题了，第二种铺法就转换成 f(i-2) 的问题了。根据加
法原理，得到的递推关系式为 f(i) = f(i-1) +f(i-2)×2，边界为 f(0)=1，f(1)=1。
*/
#include<bits/stdc++.h>
using namespace std;
const int N = 1e3+10;
int n;
long long f[N]; 
//long long f(int n){ //递归运行效率低,会超时――所有的尾递归函数都可以转换成递推函数 
//	if(n==0||n==1)return 1;
//	else return (f(n-1)+f(n-2)*2)%12345;
//}
int main(){
	f[0]=f[1]=1;
	cin>>n;
	for(int i=2;i<=n;i++){
		f[i]=f[i-1]%12345+f[i-2]*2%12345;
	}
	cout<<f[n];
	return 0;
}

